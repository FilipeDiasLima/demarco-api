version: '3.8'

services:
  app:
    build: .
    container_name: ps-api-demarco
    ports:
      - '3333:3333'
    environment:
      - NODE_ENV=dev
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - OMS_CLIENT_ID=${OMS_CLIENT_ID}
      - OMS_SECRET=${OMS_SECRET}
    depends_on:
      - mongodb
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - .:/app
      - /app/node_modules

  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: ps-api-mongodb
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password123}
      - MONGO_INITDB_DATABASE=api-demarco
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network
    restart: unless-stopped

  # MongoDB Express (Interface web para visualizar dados)
  mongo-express:
    image: mongo-express:latest
    container_name: ps-api-mongo-express
    ports:
      - '8081:8081'
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD:-password123}
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD:-pass}
    depends_on:
      - mongodb
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
